{"version":3,"sources":["helpers.js","components/PeopleTable/PeopleTable.jsx","components/Popup/Popup.jsx","components/PostsContext/PostsContext.jsx","components/UserPosts/UserPosts.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["baseUrl","PeopleTable","useState","users","setUsers","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","useEffect","fetch","then","resolve","json","allUsers","className","map","user","id","name","email","phone","type","onClick","set","push","toString","Popup","trigger","children","setPopupVisibility","PostsContext","React","createContext","posts","setPosts","UserPosts","match","useRouteMatch","userId","params","isPopupVisible","title","setTitle","postText","setPostText","userName","get","useContext","allPosts","length","post","body","postId","url","onSubmit","event","bodyData","preventDefault","method","JSON","stringify","headers","htmlFor","placeholder","value","onChange","target","required","PostDetails","setPost","comments","setComments","newComment","inputNewComment","getPostById","postFromContext","find","currentPost","getCommentsByPostId","chosenComments","deletePost","deletePostById","filter","postDel","to","oldTitle","oldPost","comment","href","editedPost","curPost","App","contextValue","useMemo","Provider","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdae728d.chunk.js","sourcesContent":["const baseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getUsers = () => (\n  fetch(`${baseUrl}/users`)\n    .then(resolve => resolve.json()));\n\nexport const getPostsByUserId = id => (\n  fetch(`${baseUrl}/posts?userId=${id}`)\n    .then(resolve => resolve.json()));\n\nexport const sendPost = bodyData => (\n  fetch(`${baseUrl}/posts`, {\n    method: 'POST',\n    body: JSON.stringify(bodyData),\n    headers: {\n      'Content-type': 'application/json;charset=UTF-8',\n    },\n  })\n    .then(resolve => resolve.json()));\n\nexport const getPostById = postId => (\n  fetch(`${baseUrl}/posts/${postId}`)\n    .then(resolve => resolve.json()));\n\nexport const getCommentsByPostId = postId => (\n  fetch(`${baseUrl}/comments?postId=${postId}`)\n    .then(resolve => resolve.json()));\n\nexport const editPostByBody = bodyData => (\n  fetch(`${baseUrl}/posts/${bodyData.id}`, {\n    method: 'PUT',\n    body: JSON.stringify(bodyData),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(resolve => resolve.json()));\n\nexport const deletePostById = postId => (\n  fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {\n    method: 'DELETE',\n  }));\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getUsers } from '../../helpers';\n\nexport const PeopleTable = () => {\n  const [users, setUsers] = useState([]);\n  const location = useLocation();\n  const history = useHistory();\n\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    getUsers().then((allUsers) => {\n      setUsers(allUsers);\n    });\n  }, []);\n\n  const openUserPosts = (id, name) => {\n    searchParams.set('user-name', name);\n    history.push(`${id}?${searchParams.toString()}`);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People</h1>\n      <table className=\"table is-fullwidth is-bordered\">\n        <thead>\n          <tr>\n            <th>\n              id\n            </th>\n            <th>\n              name\n            </th>\n            <th>\n              email\n            </th>\n            <th>\n              phone\n            </th>\n            <th>\n              posts\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr\n              key={user.id}\n            >\n              <td>{user.id}</td>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              <td>{user.phone}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button is-info\"\n                  onClick={() => {\n                    openUserPosts(user.id, user.name);\n                  }}\n                >\n                  Posts\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport './Popup.scss';\n\nexport const Popup = ({ trigger, children, setPopupVisibility }) => {\n  const closePopup = () => {\n    setPopupVisibility(false);\n  };\n\n  return (trigger) ? (\n    <div className=\"popup\">\n      <div className=\"popup__inner\">\n        <button\n          className=\"popup__button\"\n          type=\"button\"\n          onClick={closePopup}\n        >\n          X\n        </button>\n        { children }\n      </div>\n    </div>\n  ) : '';\n};\n","import React from 'react';\n\nexport const PostsContext = React.createContext({\n  posts: [],\n  setPosts: () => {},\n});\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport { Popup } from '../Popup';\nimport { PostsContext } from '../PostsContext';\n\nimport { getPostsByUserId, sendPost } from '../../helpers';\n\nimport './UserPosts.scss';\n\nexport const UserPosts = () => {\n  const match = useRouteMatch('/:userId');\n  const { userId } = match.params;\n\n  const [isPopupVisible, setPopupVisibility] = useState(false);\n  const [title, setTitle] = useState('');\n  const [postText, setPostText] = useState('');\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const userName = searchParams.get('user-name');\n\n  const { posts, setPosts } = useContext(PostsContext);\n\n  useEffect(() => {\n    getPostsByUserId(userId).then((allPosts) => {\n      if (posts.length > 0) {\n        setPosts(posts);\n      } else {\n        setPosts(allPosts);\n      }\n    });\n  }, []);\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    setPopupVisibility(false);\n\n    const newPost = {\n      userId,\n      title,\n      body: postText,\n    };\n\n    sendPost(newPost).then((post) => {\n      setPosts([...posts, post]);\n    });\n    setTitle('');\n    setPostText('');\n  };\n\n  const inputTitle = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const inputPostText = (event) => {\n    setPostText(event.target.value);\n  };\n\n  const openDetails = (postId) => {\n    searchParams.set('postId', postId);\n    history.push(`/info${match.url}/?${searchParams.toString()}`);\n  };\n\n  return (\n    <article\n      className=\"user-posts\"\n    >\n      <h1\n        className=\"title\"\n      >\n        {`${userName} posts:`}\n      </h1>\n      <hr />\n      <ul>\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"box\"\n          >\n            <h2\n              className=\"title\"\n            >\n              {post.title}\n            </h2>\n            <p\n              className=\"text\"\n            >\n              {post.body}\n            </p>\n            <br />\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => openDetails(post.id)}\n            >\n              DETAILS\n            </button>\n            <br />\n          </li>\n        ))}\n      </ul>\n      <button\n        type=\"button\"\n        className=\"button is-medium is-fullwidth is-info user-posts__button\"\n        onClick={() => setPopupVisibility(true)}\n      >\n        Add new\n      </button>\n      <Popup\n        trigger={isPopupVisible}\n        setPopupVisibility={setPopupVisibility}\n      >\n        <h3 className=\"title\">Add new post</h3>\n        <form\n          onSubmit={submitForm}\n        >\n          <label className=\"label\" htmlFor=\"title-1\">Title</label>\n          <div className=\"control\">\n            <input\n              id=\"title-1\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"write your title...\"\n              value={title}\n              onChange={inputTitle}\n              required\n            />\n          </div>\n          <label className=\"label\" htmlFor=\"textarea-1\">Post</label>\n          <div className=\"control\">\n            <textarea\n              id=\"textarea-1\"\n              className=\"textarea\"\n              type=\"email\"\n              placeholder=\"write your post...\"\n              value={postText}\n              onChange={inputPostText}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"button is-medium is-fullwidth is-info\"\n          >\n            Send\n          </button>\n        </form>\n      </Popup>\n    </article>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport {\n  getPostById,\n  getCommentsByPostId,\n  editPostByBody,\n  deletePostById,\n} from '../../helpers';\n\nimport { Popup } from '../Popup';\nimport { PostsContext } from '../PostsContext';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = () => {\n  const { posts, setPosts } = useContext(PostsContext);\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const location = useLocation();\n\n  const [isPopupVisible, setPopupVisibility] = useState(false);\n  const [title, setTitle] = useState('');\n  const [newComment, inputNewComment] = useState('');\n\n  const searchParams = new URLSearchParams(location.search);\n  const postId = searchParams.get('postId');\n  const userName = searchParams.get('user-name');\n\n  useEffect(() => {\n    getPostById(postId);\n    const postFromContext = posts\n      .find(currentPost => currentPost.id === +postId);\n\n    setPost(postFromContext);\n    getCommentsByPostId(postId)\n      .then(chosenComments => setComments(chosenComments));\n  },\n  []);\n\n  const deletePost = (id) => {\n    deletePostById(id);\n    setPosts(\n      posts.filter(postDel => postDel.id !== +id),\n    );\n  };\n\n  const submitForm = () => {\n    editPostByBody({\n      ...post,\n      title,\n      body: newComment,\n    }).then((editedPost) => {\n      setPost(editedPost);\n      setPosts(\n        posts.map(curPost => (curPost.id === +postId ? editedPost : curPost)),\n      );\n\n      setPopupVisibility(false);\n    });\n  };\n\n  const editPost = (oldTitle, oldPost) => {\n    setTitle(oldTitle);\n    inputNewComment(oldPost);\n\n    setPopupVisibility(true);\n  };\n\n  return (\n    <article className=\"post\">\n      <Link\n        to=\"/\"\n        className=\"post__link-to-home\"\n      >\n        HOME\n      </Link>\n      <div className=\"box\">\n        <article className=\"media\">\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <p>\n                <strong>{`${post.title}`}</strong>\n                <br />\n                {post.body}\n                <p className=\"post__user-name\">\n                  <small>{`${userName} [#${post.userId}]`}</small>\n                </p>\n              </p>\n            </div>\n          </div>\n        </article>\n        <button\n          type=\"button\"\n          className=\"button is-small is-info post__button\"\n          onClick={() => editPost(post.title, post.body)}\n        >\n          EDIT\n        </button>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            className=\"button is-small is-info is-light post__button\"\n            onClick={() => deletePost(post.id)}\n          >\n            DELETE\n          </button>\n        </Link>\n      </div>\n      <h2 className=\"title is-4\">\n        Comments:\n      </h2>\n      <ul className=\"post__comments\">\n        {comments.map(comment => (\n          <li\n            key={comment.id}\n            className=\"box\"\n          >\n            <strong>{comment.name}</strong>\n            <p>\n              {comment.body}\n            </p>\n            <a href={`mailto:${comment.email}`}>{comment.email}</a>\n          </li>\n        ))}\n      </ul>\n      <Popup\n        trigger={isPopupVisible}\n        setPopupVisibility={setPopupVisibility}\n      >\n        <h3 className=\"title\">Edit</h3>\n        <form\n          onSubmit={submitForm}\n        >\n          <label className=\"label\" htmlFor=\"title-11\">Title</label>\n          <div className=\"control\">\n            <input\n              id=\"title-11\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"write your title...\"\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n              required\n            />\n          </div>\n          <label className=\"label\" htmlFor=\"textarea-11\">Comment</label>\n          <div className=\"control\">\n            <textarea\n              id=\"textarea-11\"\n              className=\"textarea\"\n              type=\"email\"\n              placeholder=\"write your comment...\"\n              value={newComment}\n              onChange={event => inputNewComment(event.target.value)}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"button is-medium is-fullwidth is-info\"\n          >\n            Send\n          </button>\n        </form>\n      </Popup>\n    </article>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { PeopleTable } from './components/PeopleTable';\nimport { UserPosts } from './components/UserPosts';\nimport { PostDetails } from './components/PostDetails';\nimport { PostsContext } from './components/PostsContext';\nimport 'bulma';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  const contextValue = useMemo(() => (\n    {\n      posts,\n      setPosts,\n    }\n  ), [posts]);\n\n  return (\n    <div className=\"App\">\n      <PostsContext.Provider value={contextValue}>\n        <Switch>\n          <Route path=\"/\" component={PeopleTable} exact />\n          <Route path=\"/info\" component={PostDetails} />\n          <Route path=\"/\" component={UserPosts} />\n        </Switch>\n      </PostsContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}